apiVersion: apps/v1
kind: Deployment
metadata:
  name: trustify-dumps-serve
  labels:
    app.kubernetes.io/name: trustify-dumps-serve
    app.kubernetes.io/component: serve
    app.kubernetes.io/part-of: trustify-dumps
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: trustify-dumps-serve
      app.kubernetes.io/component: serve
      app.kubernetes.io/part-of: trustify-dumps
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trustify-dumps-serve
        app.kubernetes.io/component: serve
        app.kubernetes.io/part-of: trustify-dumps
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: trustify-dumps
            readOnly: true
        - name: config
          configMap:
            name: trustify-dumps-nginx
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: trustify-dumps-serve
                  app.kubernetes.io/component: serve
                  app.kubernetes.io/part-of: trustify-dumps
              topologyKey: "kubernetes.io/hostname"
      containers:
        - image: "docker.io/nginxinc/nginx-unprivileged:1"
          imagePullPolicy: IfNotPresent
          name: service
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: true
            - name: config
              mountPath: /etc/nginx
              readOnly: true
          ports:
            - containerPort: 8080
              name: endpoint
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
